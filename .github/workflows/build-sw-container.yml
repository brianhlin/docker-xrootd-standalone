name: Build Docker images

on:
  push:
    branches:
      - master
  repository_dispatch:
    types:
      - dispatch-build

jobs:
  make-date-tag:
    runs-on: ubuntu-latest
    if: startsWith(github.repository, 'opensciencegrid/')
    outputs:
      dtag: ${{ steps.mkdatetag.outputs.dtag }}
    steps:
    - name: make date tag
      id: mkdatetag
      run: echo "::set-output name=dtag::$(date +%Y%m%d-%H%M)"

  build:
    runs-on: ubuntu-latest
    needs: [make-date-tag]
    if: startsWith(github.repository, 'opensciencegrid/')
    strategy:
      fail-fast: False
      matrix:
        repo: ['development', 'testing', 'release']
    steps:

    - uses: actions/checkout@v2

    - id: generate-tag-list
      env:
        REPO: ${{ matrix.repo }}
        TIMESTAMP: ${{ needs.make-date-tag.outputs.dtag }}
      run: |
        docker_repo=${GITHUB_REPOSITORY/opensciencegrid\/docker-/opensciencegrid/}
        tag_list=$docker_repo:$REPO,$docker_repo:$REPO-$TIMESTAMP
        echo "::set-output name=taglist::$tag_list"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker images
      uses: docker/build-push-action@v2.2.0
      with:
        push: true
        build-args: BASE_YUM_REPO=${{ matrix.repo }}
        tags: "${{ steps.generate-tag-list.outputs.taglist }}"

  dispatch:
    runs-on: ubuntu-latest
    if: startsWith(github.repository, 'opensciencegrid/')
    needs: build
    strategy:
      matrix:
        dispatch-repo:
        - docker-osg-ce-condor
    steps:

    - name: dispatch build ${{ matrix.dispatch-repo }}
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
        repository: opensciencegrid/${{ matrix.dispatch-repo }}
        event-type: dispatch-build
